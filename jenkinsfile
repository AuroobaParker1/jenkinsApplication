pipeline {
    agent any
    
    environment {
        // Define environment variables for your container registry and Kubernetes cluster
        DOCKER_REGISTRY = 'auroobaparker'
        KUBE_NAMESPACE = 'default'
        KUBE_CLUSTER = 'minikube'
    }

    stages {
        stage('Build') {
            steps {
                // Checkout your source code from repository
                checkout scm
                
                // Build your application (replace 'your-build-command' with your actual build command)
                container('docker') {
                    sh 'docker build -t ${DOCKER_REGISTRY}/jenkins-application:latest .'
                }
            }
        }
        
        
        stage('Dockerize') {
            steps {
                // Push Docker image to registry
                script {
                    docker.withRegistry('https://${DOCKER_REGISTRY}', '8ce1ad5a-4806-4f4d-b259-b22f9df7f851') {
                        docker.image("${DOCKER_REGISTRY}/jenkins-application:latest").push()
                    }
                }
            }
        }
        
        stage('Deploy') {
            steps {
                // Deploy your application to Kubernetes
                script {
                    // Configure kubectl
                    container('kubectl') {
                        sh 'kubectl config set-cluster ${KUBE_CLUSTER} --server=https://172.27.96.179:8443 '
                        sh 'kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=user'
                        sh 'kubectl config use-context ${KUBE_CLUSTER}'
                        
                        // Deploy to Kubernetes
                        sh 'kubectl apply -f kubernetes/deployment.yaml -n ${KUBE_NAMESPACE}'
                        sh 'kubectl apply -f kubernetes/service.yaml -n ${KUBE_NAMESPACE}'
                        
                        // Wait for deployment to finish
                        sh 'kubectl rollout status deployment/jenkins-deployment -n ${KUBE_NAMESPACE}'
                    }
                }
            }
        }
    }
}
